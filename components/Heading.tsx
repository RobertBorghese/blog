import type { FC, PropsWithChildren } from "react";
import { createElement } from "react";

// The React.FC type is simply the type used for a function that returns a React component.
// React.PropsWithChildren allows passing properties for your component + children components automatically.
// The props `id` is generated by `rehype-slug` plugin
export const Heading: FC<PropsWithChildren<{ id: string; level: number }>> = ({
  id,
  level,
  children,
  ...rest
}) => {
  return createElement(
    `h${level}`,
    { ...rest, id },
    <>
      <a className="anchor" href={`#${id}`}>
        ยง
      </a>
      {children}
    </>
  );
};

// Components in md can be replaced using this map
export const components: Record<
  string,
  FC<PropsWithChildren<{ id: string }>>
> = {};

// Set all the header html components (h1, h2, etc) to use our `Heading` React component
for (let i = 0; i < 6; i++) {
  components[`h${i + 1}`] = (props) => {
    return <Heading level={i + 1} {...props} />;
  };
}

// Have `p` use... <p>
// For testing purposes XD
components[`p`] = (props) => {
  return <p {...props} />;
};
